#!/usr/bin/env bash
# ---------------------------------------------------------------------------
# Initial machine setup
# ---------------------------------------------------------------------------


{{/* Include external functions */}}
{{ template "install-homebrew.tmpl" . }}
{{ template "setup-1password.tmpl" . }}
{{ template "wezterm-definition.tmpl" . }}


#######################################
# Post installation steps for Homebrew
# Globals:
#   None
# Arguments:
#   None
#######################################
function homebrew_postinstall() {
  echo "Running Homebrew post installation steps..."

  # Setup Homebrew in shell environment
  echo "Setup current environment..."
  test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
  test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

  # Install dependencies
  echo "Installing dependencies..."
  sudo apt install -y build-essential

}

#######################################
# Install 1Password CLI
# https://developer.1password.com/docs/cli/get-started/
# Globals:
#   None
# Arguments:
#   None
#######################################
function install_1password() {
  echo "Installing 1Password CLI..."

  # Add key for 1Password repository
  curl -sS https://downloads.1password.com/linux/keys/1password.asc |
    sudo gpg --dearmor --output /usr/share/keyrings/1password-archive-keyring.gpg

  # Add 1Password repository
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] \
    https://downloads.1password.com/linux/debian/$(dpkg --print-architecture) stable main" |
    sudo tee /etc/apt/sources.list.d/1password.list

  # Add the debsig-verify policy
  sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/
  curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol |
    sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
  sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
  curl -sS https://downloads.1password.com/linux/keys/1password.asc |
    sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg

  # Install 1Password CLI
  sudo apt update && sudo apt install -y 1password-cli

}

#######################################
# Install Docker Engine
# https://docs.docker.com/engine/install/ubuntu/
# Globals:
#   None
# Arguments:
#   None
#######################################
function install_docker() {
  echo "Installing Docker Engine..."

  # Install dependencies
  sudo apt update \
    && sudo apt install -y ca-certificates curl gnupg

  # Add Docker's official GPG key
  sudo install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg |
    sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  sudo chmod a+r /etc/apt/keyrings/docker.gpg

  # Add Docker's official APT repository
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
    https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" |
    sudo tee /etc/apt/sources.list.d/docker.list >/dev/null

  # Install Docker Engine & Plugins
  sudo apt update \
    && sudo apt install -y docker-ce docker-ce-cli containerd.io \
    && sudo apt install -y docker-buildx-plugin docker-compose-plugin

  # Add current user to docker group
  sudo usermod "$USER" --append --group docker

}

#######################################
# Install Git Credential Manager
# https://github.com/git-ecosystem/git-credential-manager
# Globals:
#   None
# Arguments:
#   None
#######################################
function install_gcm() {
  echo "Installing Git Credential Manager..."
  curl -L -O https://github.com/git-ecosystem/git-credential-manager/releases/download/v2.3.2/gcm-linux_amd64.2.3.2.deb
  sudo dpkg -i gcm-linux_amd64.2.3.2.deb
  rm gcm-linux_amd64.2.3.2.deb
}

#######################################
# Install Python
# https://github.com/pyenv/pyenv#automatic-installer
# Globals:
#   None
# Arguments:
#   None
#######################################
function install_python() {
  echo "Installing Python..."

  # Install dependencies
  sudo apt update
  sudo apt install -y make build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev curl libncursesw5-dev \
    xz-utils libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev llvm tk-dev

  # Install pyenv
  curl https://pyenv.run | bash

}

#######################################
# Install Speedtest CLI
# https://www.speedtest.net/apps/cli
# Globals:
#   None
# Arguments:
#   None
#######################################
function install_speedtest() {
  echo "Installing Speedtest CLI..."

  # Install dependencies
  sudo apt install curl

  # Add Ookla repository
  curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash

  # Install Speedtest CLI
  sudo apt install speedtest

}

#######################################
# Update Ubuntu packages
# Globals:
#   None
# Arguments:
#   None
#######################################
function update_packages() {
  echo "Updating Ubuntu packages..."
  sudo apt update && sudo apt upgrade -y
}


#################### Main Program ####################

# Stop script on error
set -euo pipefail

# Update packages
update_packages

{{ if not .env.ephemeral -}}

# Install 1Password CLI
install_1password
setup_1password

# Install Docker Engine
install_docker

# Install Git Credential Manager
install_gcm

# Install Homebrew
install_homebrew
homebrew_postinstall

# Install Python
install_python

# Install Speedtest CLI
install_speedtest

# WezTerm TERM definition
install_term_definition

# Disable login banner
touch {{ .chezmoi.homeDir -}}/.hushlogin

{{- end }}
