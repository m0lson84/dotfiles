
{{- /* Additional paths */ -}}
{{- $paths := list "${HOME}/.local/bin" -}}
{{- if .env.wsl -}} {{- $paths = concat $paths ( list "/snap/bin" ) -}} {{- end -}}

{{- /* Additional configurations */ -}}
{{- $configs := list ".fzf.bash" "aliases.bash" "completions.zsh" -}}


#     _               _
#    | |             | |
#    | |__   __ _ ___| |__  _ __ ___
#    | '_ \ / _` / __| '_ \| '__/ __|
#   _| |_) | (_| \__ \ | | | | | (__
#  (_)_.__/ \__,_|___/_| |_|_|  \___|
#
#

# XDG Base Directory Specification
export XDG_CACHE_HOME=${XDG_CACHE_HOME:="$HOME/.cache"}
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:="$HOME/.config"}
export XDG_DATA_HOME=${XDG_DATA_HOME:="$HOME/.local/share"}

# Default Apps
export BROWSER="chrome"
export EDITOR="nvim"
export TERMINAL="wezterm"
export VISUAL="nvim"
export VSCODE="code"

# Additional paths
{{- range ( $paths | sortAlpha | uniq ) }}
export PATH="{{ . }}:$PATH"
{{- end }}

{{- if not .env.ephemeral }}

# 1Password CLI configuration
if command -v op >/dev/null; then
  export SSH_AUTH_SOCK=~/.1password/agent.sock
  source <(op completion bash)
fi

# Golang configuration
export GOPATH="$HOME/go"
export PATH="${GOPATH}/bin:$PATH"

# Neovim configuration
export PATH="${HOME}/.local/share/bob/nvim-bin:${PATH}"

# Node.js configuration
command -v nodenv >/dev/null && eval "$(nodenv init -)"

# Python environment configuration
export PYENV_ROOT="$HOME/.pyenv"
export CONFIGURE_OPTS="-with-openssl=$(brew --prefix openssl)"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
command -v pyenv >/dev/null && eval "$(pyenv init -)"

# Rust configuration
source "${HOME}/.cargo/env"

{{ end -}}

# Starship initialization
export STARSHIP_CONFIG="$XDG_CONFIG_HOME"/starship/starship.toml
if command -v starship >/dev/null; then
  eval "$(starship init bash)"
fi

# Load additional configurations
{{- range ( $configs | sortAlpha | uniq ) }}
source "$XDG_CONFIG_HOME"/zsh/{{ . }}
{{- end }}
