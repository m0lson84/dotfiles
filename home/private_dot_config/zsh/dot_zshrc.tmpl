
{{- /* Default browser */ -}}
{{- $browser := "chrome" -}}
{{- if .env.wsl -}}
{{- $browser = "/mnt/c/Program Files/Google/Chrome/Application/chrome.exe" -}}
{{- end -}}

{{- /* Default terminal */ -}}
{{- $terminal := "wezterm" -}}
{{- if eq .env.os "windows" -}} {{- $terminal = "wt" -}} {{- end -}}

{{- /* Additional configurations */ -}}
{{- $configs := list ".fzf.zsh" "aliases.zsh" "completions.zsh" "functions.zsh" -}}


#             _
#            | |
#     _______| |__  _ __ ___
#    |_  / __| '_ \| '__/ __|
#   _ / /\__ \ | | | | | (__
#  (_)___|___/_| |_|_|  \___|
#
#


# XDG Base Directory Specification
export XDG_CACHE_HOME=${XDG_CACHE_HOME:="$HOME/.cache"}
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:="$HOME/.config"}
export XDG_DATA_HOME=${XDG_DATA_HOME:="$HOME/.local/share"}

{{ if not .env.ephemeral -}}

# Enable Homebrew auto completion
HOMEBREW_PREFIX={{ if eq .env.os "linux" -}} /home/linuxbrew/.linuxbrew {{- else -}} /usr/local {{- end }}
FPATH="${HOMEBREW_PREFIX}/share/zsh/site-functions:${FPATH}"
unset HOMEBREW_PREFIX

{{- end }}

# ZSH configuration
ZSH=$HOME/.oh-my-zsh

# VS Code plugin
VSCODE="code"

# Disable Oh-My-ZSH update
DISABLE_UPDATE_PROMPT=true
DISABLE_AUTO_UPDATE=true

# Oh-My-ZSH Plugins
source "$XDG_CONFIG_HOME"/zsh/plugins.zsh

# Initialize Oh-My-ZSH
source $ZSH/oh-my-zsh.sh

# ZShell options
setopt autocd
setopt histignorespace

# Default Apps
export BROWSER={{ $browser | quote }}
export EDITOR="nvim"
export TERMINAL={{ $terminal | quote }}
export VISUAL="nvim"

{{ if not .env.ephemeral -}}

# 1Password CLI configuration
if command -v op >/dev/null; then
# export SSH_AUTH_SOCK=~/.1password/agent.sock
fi

# mise-en-place configuration
export MISE_ENV_FILE=.env
export MISE_GO_DEFAULT_PACKAGES_FILE="${XDG_CONFIG_HOME}/mise/golang"
export MISE_NODE_DEFAULT_PACKAGES_FILE="${XDG_CONFIG_HOME}/mise/nodejs"
export MISE_PYTHON_DEFAULT_PACKAGES_FILE="${XDG_CONFIG_HOME}/mise/python"
command -v mise >/dev/null && eval "$(mise activate zsh)"
command -v mise >/dev/null && eval "$(mise hook-env -s zsh)"

# OpenSSL configuration
export CONFIGURE_OPTS="-with-openssl=$(brew --prefix openssl)"

# Rust configuration
source "${HOME}/.cargo/env"

{{ end -}}

# Starship initialization
export STARSHIP_CONFIG="$XDG_CONFIG_HOME"/starship/starship.toml
command -v starship >/dev/null && eval "$(starship init zsh)"

# Load additional configurations
{{- range ( $configs | sortAlpha | uniq ) }}
source "$XDG_CONFIG_HOME"/zsh/{{ . }}
{{- end }}
